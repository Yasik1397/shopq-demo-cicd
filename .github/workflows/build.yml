name: Generate Mobile Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm install

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build Android APK and AAB (Testing flavor)
        run: |
          cd android
          ./gradlew assembleQaRelease bundleQaRelease

      - name: Upload APK Artifact (Testing flavor)
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/qa/release/**/*.apk
          retention-days: 5  # GitHub forced max retention
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: Upload AAB Artifact (Testing flavor)
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/qaRelease/**/*.aab
          retention-days: 5  # GitHub forced max retention
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: List APK and AAB files
        run: |
          echo "Listing APK files:"
          ls -lh android/app/build/outputs/apk/
          ls -lh android/app/build/outputs/apk/qa/
          ls -lh android/app/build/outputs/apk/qa/release/

          echo "Listing AAB files:"
          ls -lh android/app/build/outputs/bundle/
          ls -lh android/app/build/outputs/bundle/qaRelease/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/qa/qaRelease

      - name: Download AAB Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/qaRelease

      # Uncomment and configure Fastlane if needed
      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 3.1

      # - name: Install Fastlane
      #   run: gem install fastlane

      # - name: Deploy to Google Play (Internal Track)
      #   env:
      #     PLAY_STORE_JSON: ${{ secrets.PLAY_STORE_TEST_JSON }}
      #   run: |
      #     echo "$PLAY_STORE_JSON" > /tmp/playstore.json
      #     cd android
      #     fastlane android deploy_test json_key:/tmp/playstore.json

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Upload AAB to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase appdistribution:distribute android/app/build/outputs/apk/qa/release/app-qa-release.apk \
            --app 1:88425189574:android:b65b06a39797fe32e407c7 \
            --release-notes "QA release build from GitHub Actions" \
            --testers "mohammedyasik.r.applogiq@gmail.com"

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Install GitHub CLI (if needed)
        run: sudo apt-get install gh -y

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GIT_TOKEN }}" | gh auth login --with-token
          gh auth setup-git

      - name: Delete old artifacts with GH CLI
        run: |-
          echo "Deleting old artifacts using GitHub CLI..."
          
          ARTIFACTS=$(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | "\(.id) \(.created_at)"')

          SEVEN_DAYS_AGO=$(date -d '7 days ago' +%s)

          echo "$ARTIFACTS" | while read -r ARTIFACT_ID CREATED_AT; do
            CREATED_DATE=$(date -d "$CREATED_AT" +%s)
            if [ "$CREATED_DATE" -lt "$SEVEN_DAYS_AGO" ]; then
              echo "Deleting artifact ID: $ARTIFACT_ID created at $CREATED_AT"
              gh api --method DELETE repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID
            else
              echo "Keeping artifact ID: $ARTIFACT_ID created at $CREATED_AT"
            fi
          done
