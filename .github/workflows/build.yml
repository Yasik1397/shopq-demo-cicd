name: Generate Mobile Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm install

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build Android APK and AAB (Testing flavor)
        run: |
          cd android
          ./gradlew assembleQaRelease bundleQaRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/qa/release/**/*.apk

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/qaRelease/**/*.aab

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download AAB Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/qaRelease

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      - name: Install Fastlane
        run: gem install fastlane

      - name: Deploy to Google Play (Internal Track)
        env:
          PLAY_STORE_JSON: ${{ secrets.PLAY_STORE_TEST_JSON }}
        run: |
          echo "$PLAY_STORE_JSON" > /tmp/playstore.json
      
          AAB_FILE=$(find android/app/build/outputs/bundle/qaRelease -type f -name "*.aab" | head -n 1)
          AAB_FILE_ABS=$(realpath "$AAB_FILE")
          echo "Found AAB file: $AAB_FILE_ABS"

          if [ ! -f "$AAB_FILE_ABS" ]; then
            echo "AAB file not found!"
            exit 1
          fi

          fastlane android deploy_test aab_path:"$AAB_FILE_ABS" json_key:"/tmp/playstore.json"
      

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GIT_TOKEN }}" | gh auth login --with-token

      - name: Delete Old Artifacts
        run: |
          for ID in $(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.expired == false) | .id'); do
            gh api -X DELETE repos/${{ github.repository }}/actions/artifacts/$ID
            echo "Deleted artifact ID: $ID"
          done || true
