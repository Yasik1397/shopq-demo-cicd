name: Android QA CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build QA APK & AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Node Modules
        run: npm install

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Decode Keystore
        run: |
          mkdir -p android/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/keystore/release-key.jks
          test -f android/keystore/release-key.jks || (echo "Keystore decode failed" && exit 1)

      - name: Print signing env (debug only)
        run: |
          echo "KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}"
          echo "KEY_ALIAS: ${KEY_ALIAS}"
          echo "KEY_PASSWORD: ${KEY_PASSWORD}"
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APK and AAB
        run: |
          cd android
          ./gradlew assembleQaRelease bundleQaRelease
        env:
          KEYSTORE_PATH: keystore/release-key.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload QA APK
        uses: actions/upload-artifact@v4
        with:
          name: qa-apk
          path: android/app/build/outputs/apk/qa/release/*.apk

      - name: Upload QA AAB
        uses: actions/upload-artifact@v4
        with:
          name: qa-aab
          path: android/app/build/outputs/bundle/qaRelease/*.aab


  deploy:
    name: Deploy QA AAB to Play Store
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Ruby & Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Decode Keystore
        run: |
          mkdir -p android/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/keystore/release-key.jks

      - name: Decode Play Store JSON
        run: echo "${{ secrets.PLAY_STORE_JSON }}" | base64 --decode > /tmp/playstore.json

      - name: Download QA AAB
        uses: actions/download-artifact@v4
        with:
          name: qa-aab
          path: app_aab

      - name: Deploy QA to Internal Testing
        run: |
          AAB_FILE=$(find app_aab -name "*.aab" | head -n 1)
          echo "Deploying $AAB_FILE"
          bundle exec fastlane android deploy_test aab_path:"$AAB_FILE" json_key:"/tmp/playstore.json"
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

  cleanup:
    name: Cleanup Artifacts
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GIT_TOKEN }}" | gh auth login --with-token

      - name: Delete Old Artifacts
        run: |
          for ID in $(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.expired == false) | .id'); do
            gh api -X DELETE repos/${{ github.repository }}/actions/artifacts/$ID
            echo "Deleted artifact ID: $ID"
          done || true
