name: Generate Mobile Build with SonarQube

on:
  push:
    branches:
      - testing

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Debug Directory Structure
        run: ls -R

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Debug Directory Structure
        run: ls -R

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

  sonar_test:
    name: Sonarqube Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Debug Directory Structure
        run: ls -R

      - name: Install Dependencies
        run: npm install

      - name: Debug Directory Structure
        run: ls -R

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Generate Native Modules
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew clean :app:generatePackageList

      - name: Debug Google Services JSON
        run: |
          if [ -f "android/app/src/dev/google-services.json" ]; then
            echo "Google Services JSON found for dev environment"
          else
            echo "Google Services JSON missing for dev environment"
            exit 1
          fi

      - name: Gradle build and analyse sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew build sonar --info

  build:
    name: Build and Upload APK/AAB
    runs-on: ubuntu-latest
    needs: sonar_test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Debug Directory Structure
        run: ls -R

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Android
        run: |
          cd android
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Building APK"
            ./gradlew assembleLive --parallel --max-workers=4 --no-daemon
          else
            echo "Building AAB"
            ./gradlew bundleLive --parallel --max-workers=4 --no-daemon
          fi

      - name: List APK Directory
        run: |
          if [ -d "android/app/build/outputs/apk/" ]; then
            echo "Listing APK directory"
            ls -R android/app/build/outputs/apk/
          fi

      - name: List AAB Directory
        run: |
          if [ -d "android/app/build/outputs/bundle/" ]; then
            echo "Listing AAB directory"
            ls -R android/app/build/outputs/bundle/
          else
            echo "No AAB files found."
          fi

      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/**/*.apk

      - name: Upload AAB Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/**/*.aab
          if-no-files-found: ignore
