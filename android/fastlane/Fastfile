# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# default_platform(:android)

# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end

#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
  
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end

#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end


############################################## Single app deploy ###########################################################

# platform :android do
#   desc "Deploy a new version to the Google Play Store"
#   lane :deploy do
#     upload_to_play_store(
#       track: "internal", # Change to 'alpha', 'beta', or 'production' as needed
#       aab: "app/build/outputs/bundle/release/app-release.aab"
#     )
#   end
# end


##################################### Multi tenant app deploy dynamically ###############################################

# platform :android do
#   desc "Deploy a new version to Google Play for a specific tenant"
#   lane :deploy do |options|
#     tenant = options[:tenant] || "default"
#     package_name = "com.shopq.#{tenant}"  # Adjust package name per tenant

#     gradle(
#       task: "bundleLive",
#       properties: { "appIdSuffix" => tenant }
#     )

#     upload_to_play_store(
#       track: "internal",
#       package_name: package_name,
#       aab: "android/app/build/outputs/bundle/liveRelease/app-live-release.aab"
#     )
#   end
# end


# For testing app

default_platform(:android)

platform :android do
  desc "Deploy testing flavor to Google Play Internal Track"
  lane :deploy_test do
    gradle(
      task: "bundle",
      build_type: "Release",
      flavor: "Qa"
    )
    upload_to_play_store(
      track: "internal",
      aab: "app/build/outputs/bundle/qaRelease/app-qa-release.aab",
      package_name: "com.shopq.testingapp"
    )
  end
end